//--------------------------------------------------------------------------//
//		TeX Module Control with HIDEMARU Macro								//
//																			//
//			Sugi-Macro  -Macro Factory for HIDEMARU Editor-					//
//			%COPYRIGHT%		//
//																			//
//--------------------------------------------------------------------------//

//!HEADER
//	INTERNAL VERSION	%VER_MAJOR%.%VER_MINOR%.%VER_RELEASE%
//	PURPOSE				MODULE CONTROL MICRO KERNEL
//	PLATFORM			WinDVI
//

//--------------------------------------------------------------------------//
//	このマクロは WinDVI 専用です。											//
//--------------------------------------------------------------------------//

//	Platform identifier
//		呼び出しマクロが正しいかどうかのチェックやレジストリアクセスに使用
//		レジストリキー名の仕様に準拠する必要がある
//
$DVIWARE	=	"WinDVI";

//----------------------------------//
//	Common global data				//
//----------------------------------//

//	Definition of return code from module control micro-kernel
//		マクロからの戻り値の定義
//
#RETURN_SUCCESS	=	  0;	//	正常にプレビューできた
#RETURN_FAILED	=	  1;	//	DVIファイルがなかった
#RETURN_ERROR	=	255;	//	異常終了

//	Base registry path
//		レジストリのパス名の定義
//
$REG_ROOT = "Sugi_Macro\\TeXModuleControl";	//	マクロのルートキー
$REG_K_PI_BASE = "Platform\\" + $DVIWARE + "\\DVIware";
	//	プラットフォームのサブキー
$REG_K_MACROCONFIG	=	"MacroConfig";	//	マクロの設定定義のサブキー

//	Get MacroFolder's Name
call _kernel_getmacrodir;
$MACRODIR = $$return + "\\tex_mc";

//	Message Data Information
$MSGINI	=	$MACRODIR + "\\message.ini";

//	Dynamic Data Information
$DYNINI	=	$MACRODIR + "\\dyndata.ini";
$DYN_MODULECMD	=	"ModuleCmd";	//	モジュール動作定義のサブキー
$DYN_MC_ACTION	=	"Action";
$DYN_MC_RETURN	=	"return_preview";
$DYN_PROJECT	=	"CurrentProjectInfo";	//	処理するファイルの情報

//	Current Project Information
//		コンパイル対象ファイルの情報
//
$FILENAME	=	getinistr($DYNINI,$DYN_PROJECT,"FileName");
$SHORTNAME	=	getinistr($DYNINI,$DYN_PROJECT,"ShortName");
$PROJECTDIR	=	getinistr($DYNINI,$DYN_PROJECT,"ProjectDir");

call _kernel_getdatanum $REG_K_MACROCONFIG + "\\DVIware", "OpenType";
#OPENTYPE = ##return;

//----------------------------------//
//	Platform dependent codes		//
//----------------------------------//

$REG_ENUM[0]	=	"BaseDir";
$REG_ENUM[1]	=	"CmdArgv";
$REG_ENUM[2]	=	"TitleBarString";
call _kernel_getenumdatastr $REG_K_PI_BASE, 3;
$DVIWAREDIR		=	$REG_VALUE[0];
$CMDARGV		=	$REG_VALUE[1];
$TITLEBARSTR	=	$REG_VALUE[2];

call _kernel_getdatanum $REG_K_PI_BASE, "Reopen";
#REOPEN	=	##return;

main:
	#ACTION = getininum($DYNINI, $DYN_MODULECMD, $DYN_MC_ACTION);
	if (#ACTION == 0) {
		call _local_preview;
		##ret = ##return;
	} else if (#ACTION == 1) {
		call _local_close;
		##ret = ##return;
	}
	writeininum $DYNINI, $DYN_MODULECMD, $DYN_MC_RETURN, ##ret;
	endmacro;


_local_preview:
	$DVIFILE = $PROJECTDIR + "\\" + $SHORTNAME + ".dvi";
	if (!existfile($DVIFILE)) {
		$MSGARG[0] = $DVIFILE;
		call _kernel_showmsg 0, "Error_File_notExist";
		return #RETURN_ERROR;
	}
	call _local_windvi findwindow($TITLEBARSTR + " - " + $DVIFILE);
	return ##return;

_local_close:
	##windvi = findwindow($TITLEBARSTR + " - " + $DVIFILE);
	if (!##windvi) return #RETURN_SUCCESS;

	if (#OPENTYPE == 2) {
		$MSGARG[0] = $DVIFILE;
		call _kernel_showmsg 1, "Question_WinDviExist";
		##result = ##return;
	}

	if ((#OPENTYPE == 1 || ##result == 1) && (!#REOPEN)) {
		##s = sendmessage(##hwnd_dvi, 0x0006, 0x0001, 0);
		ddeinitiate "yawindvi", "yawindvi";
		if (result) {
			ddeexecute "[FileExit]";
			ddeterminate;
		} else ##s = sendmessage(##hwnd_dvi, 0x0112, 0xF060, 0);
	}
	return #RETURN_SUCCESS;

//EndofPreview_Main

_local_windvi:
	if (!##1) {
		run "\"" + $DVIWAREDIR + "\\" + $CMDARGV + "\" \"" + $DVIFILE + "\"";
		if (!result) {
			$MSGARG[0] = $CMDARGV;
			call _kernel_showmsg 0, "Error_Module_ExeOpen";
			return #RETURN_ERROR;
		}
	} else {
		##s = sendmessage(##1, 0x0006, 0x0001, 0);
		ddeinitiate "yawindvi", "yawindvi";
		if (!result) {
			##s = sendmessage(##1, 0x0112, 0xF060, 0);
			$MSGARG[0] = $TITLEBARSTR;
			call _kernel_showmsg 0, "Error_Module_DDEInit";
			return #RETURN_ERROR;
		}
		ddeexecute "[WinNormal]";
		ddeexecute "[FileReopen]";
		if (result) ddeterminate;
		else {
			ddeexecute "[FileExit]";
			if (result) ddeterminate;
			else ##s = sendmessage(##1, 0x0112, 0xF060, 0);
			$MSGARG[0] = $DVIFILE;
			call _kernel_showmsg 0, "Error_Module_DVIFileCreate";
			return #RETURN_FAILED;
		}
	}

	return #RETURN_SUCCESS;

//------------------------------------------//
//	- Module Control Service Functions -	//
//------------------------------------------//

